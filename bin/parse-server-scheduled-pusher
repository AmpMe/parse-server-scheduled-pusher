#!/usr/bin/env node
const Parse = require('parse/node');
const { runCampaigns, sendScheduledPushes } = require('../src');
const { logger } = require('../src/util');

const appId = process.env.PARSE_APPLICATION_ID;
Parse.initialize(
  appId,
  process.env.PARSE_JAVASCRIPT_KEY,
  process.env.PARSE_MASTER_KEY
);
Parse.serverURL = process.env.PARSE_URL;

if (typeof process.env.PARSE_MESSAGE_QUEUE_ADAPTER !== 'string') {
  throw new Error('PARSE_MESSAGE_QUEUE_ADAPTER must be defined');
}

logger.info({ messageQueueAdapter: process.env.PARSE_MESSAGE_QUEUE_ADAPTER });
const messageQueueAdapter = require(process.env.PARSE_MESSAGE_QUEUE_ADAPTER);
if (typeof messageQueueAdapter.createPublisher !== 'function') {
  throw new Error('Invalid adapter');
}

const channel = process.env.PARSE_PUSH_CHANNEL;
logger.info({ channel });
if (typeof channel !== 'string') {
  throw new Error('Invalid channel');
}

const publisher = messageQueueAdapter.createPublisher();
logger.info('Created MQ publisher');

sendScheduledPushes(publisher, channel, appId)
  .then(() => {
    logger.info('Finished sending scheduled pushes');
  });

runCampaigns()
  .then(() => {
    logger.info('Finished scheduling pushes');
  });
